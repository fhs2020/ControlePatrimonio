@model ControlePatrimonio.Models.Produto

@{
    ViewBag.Title = "Edit";

    if (Model.URLFoto == null)
    {
        Model.URLFoto = "Hello";
    }

    var img = new FileInfo(Model.URLFoto);
}

<h2>Editar</h2>

@using (Html.BeginForm("Edit", "Produto", FormMethod.Post,
                                                       new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.URLFoto)

    <div class="form-horizontal">
        <h4>Produto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)


        <div class="form-group">
            @Html.LabelFor(model => model.CategoriaID, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoriaID, (SelectList)ViewBag.Categoria, "selecione uma categoria", new { @class = "form-control" })

                <div class="col-md-10">
                    <a class="button" href="@Url.Content("~/Categoria/Create")"
                       id="genreAddLink">Adicionar nova categoria</a>
                </div>

                @Html.ValidationMessageFor(model => model.NomeProduto, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.NomeProduto, "Produto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeProduto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeProduto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataAquisicao, "Data Aquisição", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataAquisicao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataAquisicao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, "Descrição", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NotaFiscal, "Nota Fiscal", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NotaFiscal, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TempoGarantia, "Tempo Garantia em meses", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TempoGarantia, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Obsrvacao, "Observação", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Obsrvacao, new { @class = "form-control" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.URLFoto, "Nova Foto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.URLImage, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="file" name="fileImage" class="form-control" /><br><br>
                <br><br>

            </div>
        </div>


        @if (img.Name != "Hello")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.URLFoto, "Foto produto", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col" style="width: 500px;">
                    <img src="@Url.Content(String.Format("~/Content/Images/{0}", img.Name))" />
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar para lista de produtos", "Index")
</div>

@section Scripts {
    <script src="~/Scripts/inputmask/jquery.inputmask.js"></script>
@Scripts.Render("~/bundles/jqueryval")

<script>
    $(document).ready(function () {

        $("#Telefone").inputmask("mask", { "mask": "(99) 9999-99999" });
        $("#CNPJ").inputmask("mask", { "mask": "999.999.999-99" }, { reverse: true });
        $("#CEP").inputmask("mask", { "mask": "99999-999" });
        $("#DataAquisicao").inputmask("mask", { "mask": "99/99/9999" });


       
    });

            //$("#NomeProduto").keypress(function (event) {
            //    var inputValue = event.charCode;
            //    if (!(inputValue >= 65 && inputValue <= 120) && (inputValue != 32 && inputValue != 0)) {
            //        event.preventDefault();
            //    }
            //});

            //$("#Cidade").keypress(function (event) {
            //    var inputValue = event.charCode;
            //    if (!(inputValue >= 65 && inputValue <= 120) && (inputValue != 32 && inputValue != 0)) {
            //        event.preventDefault();
            //    }
            //});

            //$("#Estado").keypress(function (event) {
            //    var inputValue = event.charCode;
            //    if (!(inputValue >= 65 && inputValue <= 120) && (inputValue != 32 && inputValue != 0)) {
            //        event.preventDefault();
            //    }
            //});

            //$("#Pais").keypress(function (event) {
            //    var inputValue = event.charCode;
            //    if (!(inputValue >= 65 && inputValue <= 120) && (inputValue != 32 && inputValue != 0)) {
            //        event.preventDefault();
            //    }
            //});

</script>
}
